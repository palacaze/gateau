# template package fil that simple headers only libs that consist ideally in only
# one file, and with no support for cmake

# find the first provided header and create an imported target
macro(@SOCUTE_PACKAGE_MODULE_NAME@_find name)
    set(_headers_list @SOCUTE_PACKAGE_MODULE_HEADERS_FILES@)
    set(_headers_dir @SOCUTE_PACKAGE_MODULE_HEADERS_DIR@)

    include(FindPackageHandleStandardArgs)

    # look for the first header from the list
    list(GET _headers_list 0 _first_header)
    get_filename_component(_first_header ${_first_header} NAME)
    set(_find_path_cmd NAMES ${_first_header})

    # account for expected subdir
    if (_headers_dir)
        list(APPEND _find_path_cmd PATH_SUFFIXES ${_headers_dir})
    endif()

    find_path(${name}_INCLUDE_DIRS ${_find_path_cmd})

    find_package_handle_standard_args(
        ${name} DEFAULT_MSG ${name}_INCLUDE_DIRS)

    # rewind once to move out of the expected subdir
    if(${name}_FOUND AND _headers_dir)
        get_filename_component(${name}_INCLUDE_DIRS
            "${${name}_INCLUDE_DIRS}/.." ABSOLUTE)
    endif()

    mark_as_advanced(${name}_INCLUDE_DIRS)

    # create an imported target
    if(${name}_FOUND AND NOT TARGET ${name})
        add_library(${name} INTERFACE IMPORTED)
        set_target_properties(${name} PROPERTIES
            INTERFACE_INCLUDE_DIRECTORIES "${${name}_INCLUDE_DIRS}")
    endif()

    unset(_headers_list)
    unset(_headers_dir)
    unset(_first_header)
    unset(_find_path_cmd)
endmacro()

# install headers for this dep
macro(@SOCUTE_PACKAGE_MODULE_NAME@_install name)
    set(_headers_list @SOCUTE_PACKAGE_MODULE_HEADERS_FILES@)
    set(_headers_dir @SOCUTE_PACKAGE_MODULE_HEADERS_DIR@)

    # build install command: create a dir if necessary, then copy the files
    if (_headers_dir)
        set(_install_dest "include/{_headers_dir}")
    else()
        set(_install_dest "include")
    endif()

    # call to external project, which installs the dep
    socute_install_dependency(${name}
        URL ${_headers_list}
        INSTALL_COMMAND ${CMAKE_COMMAND} -E make_directory "<INSTALL_DIR>/${_install_dest}"
                COMMAND ${CMAKE_COMMAND} -E copy "<DOWNLOADED_FILE>" "<INSTALL_DIR>/${_install_dest}"
        NO_EXTRACT
        NO_CONFIGURE
        NO_BUILD
    )

    unset(_headers_list)
    unset(_headers_dir)
    unset(_install_dest)
endmacro()
